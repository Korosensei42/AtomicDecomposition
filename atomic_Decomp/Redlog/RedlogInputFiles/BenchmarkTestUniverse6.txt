load_package redlog;
rlset OFSF;
off rlverbose;
on rlnzden;

vars := {c110100, c111100, c111010, m111111, c100011, c101110, m110110, c101111, c110000, c111000, c111001, m110111, c110101, c101101, m110001, m111001, c101100, m111000, c101001
, c110001, c110011, m100001, c100100, m101100, m100101, m111011, c111111, c101000, m110100, m100000, c111101, m100110, c111110, m111110, m110000, m111100, m101101, m111010
, c101011, m101110, c101010, m101001, m100100, m101010, m110010, c100111, m101000, m100111, c100001, c110110, m100011, m110101, c111011, c100000, c100101, m110011, c110111
, c100010, m101111, m101011, m100010, c110010, c100110, m111101};

    formula := ((((m111111 + (m111110 + (m111101 + (m111100 + (m111011 + (m111010 + (m111001 + (m111000 + (m110111 + (m110110 + (m110101 + (m110100 + (m110011 + (m110010 + (m110001 + (m110000 + (m101111 + (m101110 + (m101101 

+ (m101100 + (m101011 + (m101010 + (m101001 + (m101000 + (m100111 + (m100110 + (m100101 + (m100100 + (m100011 + (m100010 + (m100000 + m100001
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
) <= (m111111 

+ (m111110 + (m111101 + (m111100 + (m111011 + (m111010 + (m111001 + (m111000 + (m110111 + (m110110 + (m110101 + (m110100 + (m110011 + (m110010 + (m110001 + (m110000 + (m101111 + (m101110 + (m101101 + (m101100 

+ (m101011 + (m101010 + (m101001 + (m101000 + (m100111 + (m100110 + (m100101 + (m100100 + (m100011 + (m100010 + (m100000 + m100001
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
) and (((((((((((((((((((((((((((((((((0 <= m100000
) 

and (0 <= m100001
)
) and (0 <= m100010
)
) and (0 <= m100011
)
) and (0 <= m100100
)
) and (0 <= m100101
)
) and (0 <= m100110
)
) and (0 <= m100111
)
) and (0 <= m101000
)
) and (0 <= m101001
)
) and (0 <= m101010
)
) 

and (0 <= m101011
)
) and (0 <= m101100
)
) and (0 <= m101101
)
) and (0 <= m101110
)
) and (0 <= m101111
)
) and (0 <= m110000
)
) and (0 <= m110001
)
) and (0 <= m110010
)
) and (0 <= m110011
)
) and (0 <= m110100
)
) 

and (0 <= m110101
)
) and (0 <= m110110
)
) and (0 <= m110111
)
) and (0 <= m111000
)
) and (0 <= m111001
)
) and (0 <= m111010
)
) and (0 <= m111011
)
) and (0 <= m111100
)
) and (0 <= m111101
)
) and (0 <= m111110
)
) 

and (0 <= m111111
)
) and (((((((((((((((((((((((((((((((((c100000 = 0
) impl (m100000 = 0
)
) and ((c100001 = 0
) impl (m100001 = 0
)
)
) and ((c100010 = 0
) impl (m100010 = 0
)
)
) and ((c100011 = 0
) impl (m100011 = 0
)
)
) 

and ((c100100 = 0
) impl (m100100 = 0
)
)
) and ((c100101 = 0
) impl (m100101 = 0
)
)
) and ((c100110 = 0
) impl (m100110 = 0
)
)
) and ((c100111 = 0
) impl (m100111 = 0
)
)
) and ((c101000 = 0
) impl (m101000 = 0
)
)
) 

and ((c101001 = 0
) impl (m101001 = 0
)
)
) and ((c101010 = 0
) impl (m101010 = 0
)
)
) and ((c101011 = 0
) impl (m101011 = 0
)
)
) and ((c101100 = 0
) impl (m101100 = 0
)
)
) and ((c101101 = 0
) impl (m101101 = 0
)
)
) 

and ((c101110 = 0
) impl (m101110 = 0
)
)
) and ((c101111 = 0
) impl (m101111 = 0
)
)
) and ((c110000 = 0
) impl (m110000 = 0
)
)
) and ((c110001 = 0
) impl (m110001 = 0
)
)
) and ((c110010 = 0
) impl (m110010 = 0
)
)
) 

and ((c110011 = 0
) impl (m110011 = 0
)
)
) and ((c110100 = 0
) impl (m110100 = 0
)
)
) and ((c110101 = 0
) impl (m110101 = 0
)
)
) and ((c110110 = 0
) impl (m110110 = 0
)
)
) and ((c110111 = 0
) impl (m110111 = 0
)
)
) 

and ((c111000 = 0
) impl (m111000 = 0
)
)
) and ((c111001 = 0
) impl (m111001 = 0
)
)
) and ((c111010 = 0
) impl (m111010 = 0
)
)
) and ((c111011 = 0
) impl (m111011 = 0
)
)
) and ((c111100 = 0
) impl (m111100 = 0
)
)
) 

and ((c111101 = 0
) impl (m111101 = 0
)
)
) and ((c111110 = 0
) impl (m111110 = 0
)
)
) and ((c111111 = 0
) impl (m111111 = 0
)
)
)
)
) and ((0 = 0
) and (not(0 = 0)
)
)
);
query := (rlqea ex(vars, formula));

end;