load_package redlog;
rlset OFSF;
off rlverbose;
on rlnzden;

vars := {c0010, m0010, m0001, m0111, m1111, c0111, m0011, c1011, m1100, c0101, m0101, m0000, c1100, c1010, c0100, c1101, m1001, c1001, m1000, c0001, c0011, m1011, m0100, m1101, c0110, c1111, m0110, m1010, c0000, m1110, c1110, c1000};

    formula := (
(
(
(
(
(
(
(
(
m1111 + (
m1110 + (
m1101 + (
m1100 + (
m1011 + (
m1010 + (
m1000 + m1001
)
)
)
)
)
)
) + (
m1111 + (
m1110 + (
m1101 + (
m1100 + (
m0111 + (
m0110 + (
m0100 + m0101
)
)
)
)
)
)
)
) + (
m1111 + (
m1110 + (
m1011 + (
m1010 + (
m0111 + (
m0110 + (
m0010 + m0011
)
)
)
)
)
)
)
) + (
m1111 + (
m1101 + (
m1011 + (
m1001 + (
m0111 + (
m0101 + (
m0001 + m0011
)
)
)
)
)
)
)
) <= (
m1000 + (
m1010 + (
m1101 + (
m1110 + (
m1011 + (
m1001 + (
m1111 + m1100
)
)
)
)
)
)
)
) and (
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
0 <= m0001
) and (
0 <= m0010
)
) and (
0 <= m0011
)
) and (
0 <= m0100
)
) and (
0 <= m0101
)
) and (
0 <= m0110
)
) and (
0 <= m0111
)
) and (
0 <= m1000
)
) and (
0 <= m1001
)
) and (
0 <= m1010
)
) and (
0 <= m1011
)
) and (
0 <= m1100
)
) and (
0 <= m1101
)
) and (
0 <= m1110
)
) and (
0 <= m1111
)
) and (
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
c0001 = 0
) impl (
m0001 = 0
)
) and (
(
c0010 = 0
) impl (
m0010 = 0
)
)
) and (
(
c0011 = 0
) impl (
m0011 = 0
)
)
) and (
(
c0100 = 0
) impl (
m0100 = 0
)
)
) and (
(
c0101 = 0
) impl (
m0101 = 0
)
)
) and (
(
c0110 = 0
) impl (
m0110 = 0
)
)
) and (
(
c0111 = 0
) impl (
m0111 = 0
)
)
) and (
(
c1000 = 0
) impl (
m1000 = 0
)
)
) and (
(
c1001 = 0
) impl (
m1001 = 0
)
)
) and (
(
c1010 = 0
) impl (
m1010 = 0
)
)
) and (
(
c1011 = 0
) impl (
m1011 = 0
)
)
) and (
(
c1100 = 0
) impl (
m1100 = 0
)
)
) and (
(
c1101 = 0
) impl (
m1101 = 0
)
)
) and (
(
c1110 = 0
) impl (
m1110 = 0
)
)
) and (
(
c1111 = 0
) impl (
m1111 = 0
)
)
)
)
) and (
(
(
c0010 = 0
) and (
c0011 = 0
)
) and (
(
(
(
(
(not(
c0100 = 0
)) or (not(
c0101 = 0
))
) or (not(
c1100 = 0
))
) or (not(
c1101 = 0
))
) or (not(
c1110 = 0
))
) or (not(
c1111 = 0
))
)
)
) and (
(
(
(
m1111 + (
m1110 + (
m1101 + (
m1100 + (
m0111 + (
m0110 + (
m0100 + m0101
)
)
)
)
)
)
) + (
m1111 + (
m1011 + (
m0011 + m0111
)
)
)
) = (
(
m1111 + (
m1110 + (
m1101 + (
m1100 + (
m1011 + (
m1010 + (
m1000 + m1001
)
)
)
)
)
)
) + (
m1011 + (
m1010 + (
m1001 + (
m1000 + (
m0011 + (
m0010 + (
m0000 + m0001
)
)
)
)
)
)
)
)
) and (
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
0 <= m0000
) and (
0 <= m0001
)
) and (
0 <= m0010
)
) and (
0 <= m0011
)
) and (
0 <= m0100
)
) and (
0 <= m0101
)
) and (
0 <= m0110
)
) and (
0 <= m0111
)
) and (
0 <= m1000
)
) and (
0 <= m1001
)
) and (
0 <= m1010
)
) and (
0 <= m1011
)
) and (
0 <= m1100
)
) and (
0 <= m1101
)
) and (
0 <= m1110
)
) and (
0 <= m1111
)
) and (
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
c0000 = 0
) impl (
m0000 = 0
)
) and (
(
c0001 = 0
) impl (
m0001 = 0
)
)
) and (
(
c0010 = 0
) impl (
m0010 = 0
)
)
) and (
(
c0011 = 0
) impl (
m0011 = 0
)
)
) and (
(
c0100 = 0
) impl (
m0100 = 0
)
)
) and (
(
c0101 = 0
) impl (
m0101 = 0
)
)
) and (
(
c0110 = 0
) impl (
m0110 = 0
)
)
) and (
(
c0111 = 0
) impl (
m0111 = 0
)
)
) and (
(
c1000 = 0
) impl (
m1000 = 0
)
)
) and (
(
c1001 = 0
) impl (
m1001 = 0
)
)
) and (
(
c1010 = 0
) impl (
m1010 = 0
)
)
) and (
(
c1011 = 0
) impl (
m1011 = 0
)
)
) and (
(
c1100 = 0
) impl (
m1100 = 0
)
)
) and (
(
c1101 = 0
) impl (
m1101 = 0
)
)
) and (
(
c1110 = 0
) impl (
m1110 = 0
)
)
) and (
(
c1111 = 0
) impl (
m1111 = 0
)
)
)
)
)
) and (
(
(
(
(
c0000 = 0
) and (
c0001 = 0
)
) and (
c0010 = 0
)
) and (
c0011 = 0
)
) and (
(
(
(
(
(
(
(
c1111 = 0
) and (
c1100 = 0
)
) and (
c1001 = 0
)
) and (
c1011 = 0
)
) and (
c1110 = 0
)
) and (
c1101 = 0
)
) and (
c1010 = 0
)
) and (
c1000 = 0
)
)
)
);
query := (rlqea ex(vars, formula));

end;