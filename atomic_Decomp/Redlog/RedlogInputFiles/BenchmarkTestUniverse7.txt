load_package redlog;
rlset OFSF;
off rlverbose;
on rlnzden;

vars := {m1111010, c1111001, m1101001, c1000010, c1010100, m1111011, m1110001, c1101001, c1100011, m1000101, c1000011, m1100000, c1000000, m1000001, c1011000, c1111011, m1011010
, c1100000, c1110111, m1000100, m1110011, m1011000, c1110101, c1111010, c1101110, m1100010, c1011001, c1101000, c1100010, c1100101, m1101110, c1001010, c1011100, m1001000
, c1001110, m1011100, c1010101, c1011110, m1001110, m1001101, c1111100, c1001101, m1000111, c1001000, c1110010, m1001011, c1000100, c1010011, c1101010, c1110001, c1110100
, c1101011, c1100111, c1000110, m1111100, m1100111, m1010110, m1101101, c1011011, m1100011, m1100001, c1111111, m1010010, m1010001, c1001100, c1001111, m1010101, c1100001
, m1011001, c1111101, c1101101, m1010000, m1101100, c1000111, c1101111, m1110000, m1110101, m1000010, m1011111, c1010001, c1000101, c1011111, m1001100, m1000110, m1010111
, c1101100, m1100100, m1010011, m1101111, c1111110, m1010100, m1101000, c1010110, m1100110, m1111001, m1100101, m1001111, c1110011, m1011011, c1111000, m1000000, m1111101
, m1111000, m1011101, m1110100, m1110110, c1110000, m1101011, m1001001, c1010000, c1100110, m1101010, m1111111, m1011110, c1010111, m1111110, c1010010, m1000011, c1000001
, c1001011, m1110010, c1110110, c1001001, m1001010, c1100100, m1110111, c1011101, c1011010};

    formula := ((((m1111111 + (m1111110 + (m1111101 + (m1111100 + (m1111011 + (m1111010 + (m1111001 + (m1111000 + (m1110111 + (m1110110 + (m1110101 + (m1110100 + (m1110011 + (m1110010 + (m1110001 + (m1110000 + (m1101111 

+ (m1101110 + (m1101101 + (m1101100 + (m1101011 + (m1101010 + (m1101001 + (m1101000 + (m1100111 + (m1100110 + (m1100101 + (m1100100 + (m1100011 + (m1100010 + (m1100001 + (m1100000 + (m1011111 + (m1011110 

+ (m1011101 + (m1011100 + (m1011011 + (m1011010 + (m1011001 + (m1011000 + (m1010111 + (m1010110 + (m1010101 + (m1010100 + (m1010011 + (m1010010 + (m1010001 + (m1010000 + (m1001111 + (m1001110 + (m1001101 

+ (m1001100 + (m1001011 + (m1001010 + (m1001001 + (m1001000 + (m1000111 + (m1000110 + (m1000101 + (m1000100 + (m1000011 + (m1000010 + (m1000000 + m1000001
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
) <= (m1111111 

+ (m1111110 + (m1111101 + (m1111100 + (m1111011 + (m1111010 + (m1111001 + (m1111000 + (m1110111 + (m1110110 + (m1110101 + (m1110100 + (m1110011 + (m1110010 + (m1110001 + (m1110000 + (m1101111 + (m1101110 

+ (m1101101 + (m1101100 + (m1101011 + (m1101010 + (m1101001 + (m1101000 + (m1100111 + (m1100110 + (m1100101 + (m1100100 + (m1100011 + (m1100010 + (m1100001 + (m1100000 + (m1011111 + (m1011110 + (m1011101 

+ (m1011100 + (m1011011 + (m1011010 + (m1011001 + (m1011000 + (m1010111 + (m1010110 + (m1010101 + (m1010100 + (m1010011 + (m1010010 + (m1010001 + (m1010000 + (m1001111 + (m1001110 + (m1001101 + (m1001100 

+ (m1001011 + (m1001010 + (m1001001 + (m1001000 + (m1000111 + (m1000110 + (m1000101 + (m1000100 + (m1000011 + (m1000010 + (m1000000 + m1000001
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
) 

and (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((0 <= m1000000
) and (0 <= m1000001
)
) and (0 <= m1000010
)
) and (0 <= m1000011
)
) and (0 <= m1000100
)
) and (0 <= m1000101
)
) 

and (0 <= m1000110
)
) and (0 <= m1000111
)
) and (0 <= m1001000
)
) and (0 <= m1001001
)
) and (0 <= m1001010
)
) and (0 <= m1001011
)
) and (0 <= m1001100
)
) and (0 <= m1001101
)
) and (0 <= m1001110
)
) 

and (0 <= m1001111
)
) and (0 <= m1010000
)
) and (0 <= m1010001
)
) and (0 <= m1010010
)
) and (0 <= m1010011
)
) and (0 <= m1010100
)
) and (0 <= m1010101
)
) and (0 <= m1010110
)
) and (0 <= m1010111
)
) 

and (0 <= m1011000
)
) and (0 <= m1011001
)
) and (0 <= m1011010
)
) and (0 <= m1011011
)
) and (0 <= m1011100
)
) and (0 <= m1011101
)
) and (0 <= m1011110
)
) and (0 <= m1011111
)
) and (0 <= m1100000
)
) 

and (0 <= m1100001
)
) and (0 <= m1100010
)
) and (0 <= m1100011
)
) and (0 <= m1100100
)
) and (0 <= m1100101
)
) and (0 <= m1100110
)
) and (0 <= m1100111
)
) and (0 <= m1101000
)
) and (0 <= m1101001
)
) 

and (0 <= m1101010
)
) and (0 <= m1101011
)
) and (0 <= m1101100
)
) and (0 <= m1101101
)
) and (0 <= m1101110
)
) and (0 <= m1101111
)
) and (0 <= m1110000
)
) and (0 <= m1110001
)
) and (0 <= m1110010
)
) 

and (0 <= m1110011
)
) and (0 <= m1110100
)
) and (0 <= m1110101
)
) and (0 <= m1110110
)
) and (0 <= m1110111
)
) and (0 <= m1111000
)
) and (0 <= m1111001
)
) and (0 <= m1111010
)
) and (0 <= m1111011
)
) 

and (0 <= m1111100
)
) and (0 <= m1111101
)
) and (0 <= m1111110
)
) and (0 <= m1111111
)
) and (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((c1000000 = 0
) impl (m1000000 = 0
)
) and ((c1000001 = 0
) impl (m1000001 = 0
)
)
) 

and ((c1000010 = 0
) impl (m1000010 = 0
)
)
) and ((c1000011 = 0
) impl (m1000011 = 0
)
)
) and ((c1000100 = 0
) impl (m1000100 = 0
)
)
) and ((c1000101 = 0
) impl (m1000101 = 0
)
)
) and ((c1000110 = 0
) impl (m1000110 = 0
)
)
) 

and ((c1000111 = 0
) impl (m1000111 = 0
)
)
) and ((c1001000 = 0
) impl (m1001000 = 0
)
)
) and ((c1001001 = 0
) impl (m1001001 = 0
)
)
) and ((c1001010 = 0
) impl (m1001010 = 0
)
)
) and ((c1001011 = 0
) impl (m1001011 = 0
)
)
) 

and ((c1001100 = 0
) impl (m1001100 = 0
)
)
) and ((c1001101 = 0
) impl (m1001101 = 0
)
)
) and ((c1001110 = 0
) impl (m1001110 = 0
)
)
) and ((c1001111 = 0
) impl (m1001111 = 0
)
)
) and ((c1010000 = 0
) impl (m1010000 = 0
)
)
) 

and ((c1010001 = 0
) impl (m1010001 = 0
)
)
) and ((c1010010 = 0
) impl (m1010010 = 0
)
)
) and ((c1010011 = 0
) impl (m1010011 = 0
)
)
) and ((c1010100 = 0
) impl (m1010100 = 0
)
)
) and ((c1010101 = 0
) impl (m1010101 = 0
)
)
) 

and ((c1010110 = 0
) impl (m1010110 = 0
)
)
) and ((c1010111 = 0
) impl (m1010111 = 0
)
)
) and ((c1011000 = 0
) impl (m1011000 = 0
)
)
) and ((c1011001 = 0
) impl (m1011001 = 0
)
)
) and ((c1011010 = 0
) impl (m1011010 = 0
)
)
) 

and ((c1011011 = 0
) impl (m1011011 = 0
)
)
) and ((c1011100 = 0
) impl (m1011100 = 0
)
)
) and ((c1011101 = 0
) impl (m1011101 = 0
)
)
) and ((c1011110 = 0
) impl (m1011110 = 0
)
)
) and ((c1011111 = 0
) impl (m1011111 = 0
)
)
) 

and ((c1100000 = 0
) impl (m1100000 = 0
)
)
) and ((c1100001 = 0
) impl (m1100001 = 0
)
)
) and ((c1100010 = 0
) impl (m1100010 = 0
)
)
) and ((c1100011 = 0
) impl (m1100011 = 0
)
)
) and ((c1100100 = 0
) impl (m1100100 = 0
)
)
) 

and ((c1100101 = 0
) impl (m1100101 = 0
)
)
) and ((c1100110 = 0
) impl (m1100110 = 0
)
)
) and ((c1100111 = 0
) impl (m1100111 = 0
)
)
) and ((c1101000 = 0
) impl (m1101000 = 0
)
)
) and ((c1101001 = 0
) impl (m1101001 = 0
)
)
) 

and ((c1101010 = 0
) impl (m1101010 = 0
)
)
) and ((c1101011 = 0
) impl (m1101011 = 0
)
)
) and ((c1101100 = 0
) impl (m1101100 = 0
)
)
) and ((c1101101 = 0
) impl (m1101101 = 0
)
)
) and ((c1101110 = 0
) impl (m1101110 = 0
)
)
) 

and ((c1101111 = 0
) impl (m1101111 = 0
)
)
) and ((c1110000 = 0
) impl (m1110000 = 0
)
)
) and ((c1110001 = 0
) impl (m1110001 = 0
)
)
) and ((c1110010 = 0
) impl (m1110010 = 0
)
)
) and ((c1110011 = 0
) impl (m1110011 = 0
)
)
) 

and ((c1110100 = 0
) impl (m1110100 = 0
)
)
) and ((c1110101 = 0
) impl (m1110101 = 0
)
)
) and ((c1110110 = 0
) impl (m1110110 = 0
)
)
) and ((c1110111 = 0
) impl (m1110111 = 0
)
)
) and ((c1111000 = 0
) impl (m1111000 = 0
)
)
) 

and ((c1111001 = 0
) impl (m1111001 = 0
)
)
) and ((c1111010 = 0
) impl (m1111010 = 0
)
)
) and ((c1111011 = 0
) impl (m1111011 = 0
)
)
) and ((c1111100 = 0
) impl (m1111100 = 0
)
)
) and ((c1111101 = 0
) impl (m1111101 = 0
)
)
) 

and ((c1111110 = 0
) impl (m1111110 = 0
)
)
) and ((c1111111 = 0
) impl (m1111111 = 0
)
)
)
)
) and ((0 = 0
) and (not(0 = 0)
)
)
);
query := (rlqea ex(vars, formula));

end;