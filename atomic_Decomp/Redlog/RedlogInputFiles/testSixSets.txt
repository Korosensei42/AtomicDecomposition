load_package redlog;
rlset OFSF;
off rlverbose;
on rlnzden;

vars := {m110010, m011111, m101001, c011010, c111110, c100010, c100011, c011111, m100010, c110010, m101101, c011011, c011110, m111101, m101100, m110001, m010100, c100000, m110100, m100100, c110111, c101101, c100001, m011100, m111111, c010100, c010110, m110011, c111000, m110110, m100111, m110111, c111010, c010011, c100111, c110100, m010101, m010010, c110101, c111100, c111001, m110000, c110000, m101011, m011011, c110110, c011001, c100100, m111010, c111101, c010010, m111110, c110001, c101011, c101000, m010110, m111011, m011000, c011000, c101100, c011100, c011101, m010001, m110101, c111011, m011001, c111111, c110011, c010101, c100101, c101001, m010000, m111000, m101000, m011110, m011010, m100101, m100011, m101110, c010000, m100001, c101010, m011101, c100110, m101010, m100110, m010111, m100000, c101111, c101110, m101111, m010011, m111001, m111100, c010111};

    formula := (
(
(
m111111 + (
m111110 + (
m111101 + (
m111100 + (
m111011 + (
m111010 + (
m111001 + (
m111000 + (
m110111 + (
m110110 + (
m110101 + (
m110100 + (
m110011 + (
m110010 + (
m110001 + (
m110000 + (
m101111 + (
m101110 + (
m101101 + (
m101100 + (
m101011 + (
m101010 + (
m101001 + (
m101000 + (
m100111 + (
m100110 + (
m100101 + (
m100100 + (
m100011 + (
m100010 + (
m100000 + m100001
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
) <= (
m111111 + (
m111110 + (
m111101 + (
m111100 + (
m111011 + (
m111010 + (
m111001 + (
m111000 + (
m110111 + (
m110110 + (
m110101 + (
m110100 + (
m110011 + (
m110010 + (
m110001 + (
m110000 + (
m011111 + (
m011110 + (
m011101 + (
m011100 + (
m011011 + (
m011010 + (
m011001 + (
m011000 + (
m010111 + (
m010110 + (
m010101 + (
m010100 + (
m010011 + (
m010010 + (
m010000 + m010001
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
)
) and (
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
0 <= m010000
) and (
0 <= m010010
)
) and (
0 <= m010011
)
) and (
0 <= m010100
)
) and (
0 <= m010101
)
) and (
0 <= m010110
)
) and (
0 <= m010111
)
) and (
0 <= m011000
)
) and (
0 <= m011001
)
) and (
0 <= m011010
)
) and (
0 <= m011011
)
) and (
0 <= m011100
)
) and (
0 <= m011101
)
) and (
0 <= m011110
)
) and (
0 <= m011111
)
) and (
0 <= m100000
)
) and (
0 <= m100001
)
) and (
0 <= m100010
)
) and (
0 <= m100011
)
) and (
0 <= m100100
)
) and (
0 <= m100101
)
) and (
0 <= m100110
)
) and (
0 <= m100111
)
) and (
0 <= m101000
)
) and (
0 <= m101001
)
) and (
0 <= m101010
)
) and (
0 <= m101011
)
) and (
0 <= m101100
)
) and (
0 <= m101101
)
) and (
0 <= m101110
)
) and (
0 <= m101111
)
) and (
0 <= m110000
)
) and (
0 <= m110001
)
) and (
0 <= m110010
)
) and (
0 <= m110011
)
) and (
0 <= m110100
)
) and (
0 <= m110101
)
) and (
0 <= m110110
)
) and (
0 <= m110111
)
) and (
0 <= m111000
)
) and (
0 <= m111001
)
) and (
0 <= m111010
)
) and (
0 <= m111011
)
) and (
0 <= m111100
)
) and (
0 <= m111101
)
) and (
0 <= m111110
)
) and (
0 <= m111111
)
) and (
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
(
c010000 = 0
) impl (
m010000 = 0
)
) and (
(
c010010 = 0
) impl (
m010010 = 0
)
)
) and (
(
c010011 = 0
) impl (
m010011 = 0
)
)
) and (
(
c010100 = 0
) impl (
m010100 = 0
)
)
) and (
(
c010101 = 0
) impl (
m010101 = 0
)
)
) and (
(
c010110 = 0
) impl (
m010110 = 0
)
)
) and (
(
c010111 = 0
) impl (
m010111 = 0
)
)
) and (
(
c011000 = 0
) impl (
m011000 = 0
)
)
) and (
(
c011001 = 0
) impl (
m011001 = 0
)
)
) and (
(
c011010 = 0
) impl (
m011010 = 0
)
)
) and (
(
c011011 = 0
) impl (
m011011 = 0
)
)
) and (
(
c011100 = 0
) impl (
m011100 = 0
)
)
) and (
(
c011101 = 0
) impl (
m011101 = 0
)
)
) and (
(
c011110 = 0
) impl (
m011110 = 0
)
)
) and (
(
c011111 = 0
) impl (
m011111 = 0
)
)
) and (
(
c100000 = 0
) impl (
m100000 = 0
)
)
) and (
(
c100001 = 0
) impl (
m100001 = 0
)
)
) and (
(
c100010 = 0
) impl (
m100010 = 0
)
)
) and (
(
c100011 = 0
) impl (
m100011 = 0
)
)
) and (
(
c100100 = 0
) impl (
m100100 = 0
)
)
) and (
(
c100101 = 0
) impl (
m100101 = 0
)
)
) and (
(
c100110 = 0
) impl (
m100110 = 0
)
)
) and (
(
c100111 = 0
) impl (
m100111 = 0
)
)
) and (
(
c101000 = 0
) impl (
m101000 = 0
)
)
) and (
(
c101001 = 0
) impl (
m101001 = 0
)
)
) and (
(
c101010 = 0
) impl (
m101010 = 0
)
)
) and (
(
c101011 = 0
) impl (
m101011 = 0
)
)
) and (
(
c101100 = 0
) impl (
m101100 = 0
)
)
) and (
(
c101101 = 0
) impl (
m101101 = 0
)
)
) and (
(
c101110 = 0
) impl (
m101110 = 0
)
)
) and (
(
c101111 = 0
) impl (
m101111 = 0
)
)
) and (
(
c110000 = 0
) impl (
m110000 = 0
)
)
) and (
(
c110001 = 0
) impl (
m110001 = 0
)
)
) and (
(
c110010 = 0
) impl (
m110010 = 0
)
)
) and (
(
c110011 = 0
) impl (
m110011 = 0
)
)
) and (
(
c110100 = 0
) impl (
m110100 = 0
)
)
) and (
(
c110101 = 0
) impl (
m110101 = 0
)
)
) and (
(
c110110 = 0
) impl (
m110110 = 0
)
)
) and (
(
c110111 = 0
) impl (
m110111 = 0
)
)
) and (
(
c111000 = 0
) impl (
m111000 = 0
)
)
) and (
(
c111001 = 0
) impl (
m111001 = 0
)
)
) and (
(
c111010 = 0
) impl (
m111010 = 0
)
)
) and (
(
c111011 = 0
) impl (
m111011 = 0
)
)
) and (
(
c111100 = 0
) impl (
m111100 = 0
)
)
) and (
(
c111101 = 0
) impl (
m111101 = 0
)
)
) and (
(
c111110 = 0
) impl (
m111110 = 0
)
)
) and (
(
c111111 = 0
) impl (
m111111 = 0
)
)
)
)
);
query := (rlqea ex(vars, formula));

end;